---

- name: Load first page and check if jenkins is online.
  uri:
    url: http://localhost:8080/scriptText
  ignore_errors: yes
  no_log: True
  register: install

- name: Create fact isInstalled
  set_fact:
    isInstalled: "{{ install.status == 200 or install.status == 403 }}"
  when: install.status is defined

- name: Create fact isConfigured
  set_fact:
    isConfigured: "{{ install.status == 403 }}"
  when: install.status is defined

- name: Update sudoers
  copy:
    src: jenkins
    dest: /etc/sudoers.d/jenkins
    owner: root
    group: root
    mode: 0600
  tags:
    - config
    - install

- name: Install jenkins dependencies
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ jenkins_dependencies }}"
  tags:
    - install
    - depend

- name: Add jenkins to docker group
  user:
    name: jenkins
    groups: docker
    append: yes
  notify: Restart jenkins

- name: Configure docker daemon
  lineinfile:
    path: /etc/default/docker
    line: 'DOCKER_OPTS="-H unix:// -H tcp://localhost:2375"'
  notify: Restart docker

- name: Install pip dependencies
  pip:
    name: "{{ item }}"
  with_items:
    - docker-py
    - jmespath
  tags:
    - install
    - depend

- block:
  - name: "Install jenkins ver. {{ jenkins_ver}}"
    apt:
      deb: "{{ jenkins_url }}"
      state: present
    tags:
      - install

  - name: Disable setup wizard.
    lineinfile:
      name: /etc/default/jenkins
      regexp: '^JAVA_ARGS="-Djava.*$'
      line: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
    notify: Restart jenkins

  - name: Flush handlers
    meta: flush_handlers

  when: (isInstalled is not defined) or (not isInstalled)

- name: Create Sonar server container
  docker_container:
    name: sonar
    image: sonarqube
    state: started
    recreate: yes
    published_ports:
      - 9000:9000

- name: Wait for Jenkins to start
  uri:
    url: http://localhost:8080/login?from=%2F
    status_code: 200
  register: result
  until: result.status == 200
  retries: 20
  delay: 40
  tags:
    - install

- name: Create default user admin and enable security
  uri:
    url: http://localhost:8080/scriptText
    method: POST
    body: "script={{ lookup('file', '/vagrant/provisioning/groovy/create_user_enble_security.groovy') | urlencode }}"
  when: not isConfigured


- name: "Install plugin"
  uri:
    url: "http://localhost:8080/pluginManager/install?plugin.{{ item }}.default=on"
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    status_code:
      - 200
      - 302
  with_items: "{{ jenkins_plugins.plugins }}"
  changed_when: true

- name: Is plugin installtion process running?
  uri:
    url: "http://localhost:8080/updateCenter/installStatus"
    return_content: yes
    body_format: json
    user: admin
    password: admin
    force_basic_auth: yes
  register: plugin_status

- name: Set fact
  set_fact:
    isInstallationRunning: "{{ 'Pending' in plugin_status.json.data.jobs|map(attribute='installStatus') }}"

- name: Wait for plugins to be installed
  uri:
    url: "http://localhost:8080/updateCenter/installStatus"
    return_content: yes
    body_format: json
    user: admin
    password: admin
    force_basic_auth: yes
  register: plugin_status
  until: "'Pending' not in plugin_status.json.data.jobs|map(attribute='installStatus')"
  retries: 100
  delay: 5

- name: Restart jenkins
  service:
    name: jenkins
    state: restarted
  when: isInstallationRunning

- name: Wait for Jenkins to start
  uri:
    url: http://localhost:8080/login
    status_code: 200
  register: result
  until: result.status == 200
  retries: 20
  delay: 40
  tags:
    - install

- name: Configure Jenkins
  uri:
    url: http://localhost:8080/scriptText
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    body: "script={{ lookup('file', '/vagrant/provisioning/groovy/jenkins_config_machine.groovy') | urlencode }}"

- name: Create all jobs
  uri:
    url: http://localhost:8080/scriptText
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    body: "script={{ lookup('file', '/vagrant/provisioning/groovy/create_all_jobs.groovy') | urlencode }}"
  tags:
    - jobs
    - config

- name: Unsure seed job folder exists
  file:
    path: /var/lib/jenkins/workspace/seed-job/jobs
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0775
  tags:
   - install
   - config

- name: Copy seed job to its workspace
  copy:
    src: create_all_jobs.groovy
    dest: /var/lib/jenkins/workspace/seed-job/jobs
    owner: jenkins
    group: jenkins
    mode: 0660
  tags:
    - install
    - config

- name: Execute seed job
  uri:
    url: http://localhost:8080/job/seed-job/build?token=TOKENVANDHRV73hbc5dsj
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: 201
